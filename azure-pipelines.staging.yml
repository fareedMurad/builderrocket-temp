trigger:
  branches:
    include:
      - staging
  tags:
    exclude:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  majorVersion: 1
  minorVersion: 0
  patchVersion: $[counter(format('{0}.{1}', variables['majorVersion'], variables['minorVersion']), 0)]

steps:
  - checkout: self
    persistCredentials: true
    clean: true
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
      npm install -g typescript
      echo "Installing env-cmd..."
      npm install -g env-cmd
    displayName: 'npm install'

  - script: |
      branchName=$(Build.SourceBranchName)
      sanitizedBranchName=$(echo $branchName | sed 's/refs\/heads\///')
      patchVersion=$(( $(patchVersion) + 35 ))
      echo "Increased Patch Version: $patchVersion"
      git switch $sanitizedBranchName
      git config --global user.email "dev.doublemwebsolutions@gmail.com"
      git config --global user.name "Azure Pipeline"
      echo "Increase version from: $(majorVersion).$(minorVersion).$patchVersion"
      npm version $(majorVersion).$(minorVersion).$patchVersion
      nVersion="$(majorVersion).$(minorVersion).$patchVersion"
      echo "To: $nVersion"
      git tag -a v$nVersion -m "Version $nVersion"
      git commit -m "Increase version to v$nVersion"
      git push origin --tags
    displayName: 'increase version & push tag'

  - script: |
      echo "Building the React app..."
      npm run build
    displayName: 'Building the app'

  - task: FtpUpload@2
    inputs:
      credentialsOption: 'inputs'
      serverUrl: $(FTP_SERVER)
      username: $(FTP_USERNAME)
      password: $(FTP_PASSWORD)
      rootDirectory: './build'
      filePatterns: '**'
      remoteDirectory: $(FTP_FOLDER)
      clean: false
      cleanContents: true
      preservePaths: true
      trustSSL: true
    displayName: 'Uploading to the FTP'
